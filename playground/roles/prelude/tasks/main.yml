---
# tasks file for prelude
- name: add Kubernetes apt-key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: add Kubernetes' APT repository
  apt_repository:
    repo: 'deb http://apt.kubernetes.io/ kubernetes-xenial main'
    state: present
    filename: 'kubernetes'

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'
  notify:
    - Swapoff

- name: "Setting netfilter"
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: br_netfilter
  notify:
    - Restarting sysctl

- name: "Setting bridge-nf-call-iptables to 1"
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
  notify:
    - Restarting sysctl
    - Daemon reload

- name: Install dependency
  apt: name={{item}} state=present
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common
    - conntrack
    - socat
    - net-tools

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present

- name: Install docker and its dependecies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: Create docker group
  ansible.builtin.group:
    name: docker
    state: present
    system: true

- name: Append to docker group
  ansible.builtin.user:
    append: true
    name: vagrant
    groups: docker
  notify:
    - Restart docker

- name: write the config files for docker
  copy:
    content: '{ "exec-opts": ["native.cgroupdriver=systemd"] }'
    dest: /etc/docker/daemon.json
    mode: 644
  notify:
    - Restart docker

- name: Install kubernetes dependency
  apt: name={{item}} state=present
  loop:
    - kubelet
    - kubectl
    - kubeadm
  notify:
    - Pull k8s images

- name: Flush handlers
  meta: flush_handlers

